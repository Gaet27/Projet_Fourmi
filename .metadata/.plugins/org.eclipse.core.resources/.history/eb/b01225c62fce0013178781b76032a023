package Controller;

import java.util.HashSet;

import Interfaces.StationInterface;
import Model.Arc;
import Model.Station;


public class StationController extends Station implements StationInterface{

	
	//IMPLEMENTS FUNTIONS
	public StationController() {
		super();
	}
	
	//CREER LES ARCS CORRESPONDANT ET IMPLEMENTE LA LISTE DES ARCS DE LA CLASS STATION
	public void lierStation(Station arrivee, int tempsParcours){
		//INITIALISATION DES PHEROMONES POUR CHAQUE ARC
		int pheromone = 0;
		Arc arc = new ArcController(this.getNom(), arrivee.getNom(), tempsParcours, pheromone);
		this.setArcStation(arc);
		arrivee.setArcStation(arc);
	}
	
	
	//RECUPERE LA LISTE DES ARCS EN FONCTIONS DE L'ID DE LA	STATION
	public HashSet<Arc> getArcStationId(int id) {
		for (Station key : Station.ListeStation)
		{
			if(id == key.getId()){
				ArcStation = key.getArcStation();
			}
		}
		return ArcStation;
	}
	
	//RECUPERE LA L'ARC EN FONCTION DE L'ID STATION1 ET L'ID STATION2
	public HashSet<Arc> getArcSta1Sta2(HashSet<Station> stationsVisitees) {
		HashSet<Arc> ListeArcVisistés = new HashSet<Arc>();

		int j = 1;
		int i = 1;
		String Station2 = null;
		
		for (Station key : stationsVisitees)
		{
			for (Station keyy : stationsVisitees){
			    Station2 = keyy.getNom();
				if(j >= i+1)
				{
					break;
				}
				j++;
			}
			i++;
			
			String Station1 = key.getNom();
		
			for (Arc key2 : key.getArcStation())
			{
				if(key2.getDepart() ==  Station1 && key2.getArrivee() == Station2)
				{
					ListeArcVisistés.add(key2);
				}
			}
		}
		return ListeArcVisistés;
	}
	
	
}
